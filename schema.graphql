### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Content {
  createdAt: DateTime!
  gptGenerated: String
  id: String!
  outputLanguage: OutputLanguageEnum
  title: String
  transcript: String
  typeOfPromptId: String
  userId: String!
  voiceNoteUrl: String
  writingStyle: String
}

type ContentSettings {
  createdAt: DateTime!
  id: String!
  lastUpdate: DateTime!
  outputLanguage: OutputLanguageEnum!
  typeOfPrompt: TypeOfPrompt!
  typeOfPromptId: String!
  user: User!
  userId: String!
  writingStyle: String!
}

type ContentSubscriptionType {
  content: Content!

  """The type of mutationType. Either `ADD` `EDIT` or `DELETE`"""
  mutationType: typeOfMutationType!
}

type DarkMode {
  darkMode: Boolean!
  id: String!
  userId: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-time format.
"""
scalar DateTime

type DeletedUser {
  email: String!
  id: String!
}

"""The `File` scalar type represents a file upload."""
scalar File

enum IntegrationsEnum {
  CLICKUP
  CRAFT
  EVERNOTE
  GITHUB
  GMAIL
  MONDAY
  NOTION
  OBSIDIAN
  SUNSAMA
  TODOIST
  WHATSAPP
  ZAPIER
}

type Mutation {
  createNewContent: Content!
  createNewContentSettings: ContentSettings!
  createNewDarkModePreferences(darkMode: Boolean): DarkMode!
  createNewUserSubscription(type: SubscriptionTypeEnum!): UserSubscription!
  createUserFromClerk(clerkId: String!, email: String!, firstName: String!, lastName: String!, referralJwt: String): User!
  deleteAccount: ResponseMessage!
  deleteContent(contentId: String!): ResponseMessage!
  dreamWorkflowForm(longText: String!): ResponseMessage!
  extendTrialSubscription: UserSubscription!
  updateContent(contentId: String!, gptGenerated: String, outputLanguage: OutputLanguageEnum, title: String, transcript: String, typeOfPromptId: String, voiceNoteUrl: String, writingStyle: String): Content!
  updateContentSettings(outputLanguage: OutputLanguageEnum, typeOfPromptId: String, writingStyle: String): ContentSettings!
  updateDarkModePreferences(darkMode: Boolean!): DarkMode!
  userRequestIntegration(integration: IntegrationsEnum!): RequestedIntegration!
  votePlatform(platform: PlatformVoteEnum!, vote: Boolean!): PlatformVote!
}

enum OutputLanguageEnum {
  ARABIC
  ASK
  BAHASAINDONESIA
  CHINESE
  ENGLISH
  FRENCH
  HINDI
  JAPANESE
  RUSSIAN
  SPANISH
  TRANSCRIPT
  URDU
}

type PlatformVote {
  count: Int!
  platform: PlatformVoteEnum!
}

enum PlatformVoteEnum {
  ANDROID
  ANDROIDTABLET
  IOS
  IPADOS
  LINUX
  MACOS
  WINDOWS
}

type PlatformVoteSubscription {
  platform: PlatformVoteEnum!
  vote: Boolean!
}

type PlatformVoteUser {
  platform: PlatformVoteEnum!
  voted: Boolean!
}

type Query {
  checkIfAlreadyVotedPlatform(platform: PlatformVoteEnum!): PlatformVoteUser!
  getAllContent: [Content!]
  getAllTypeOfPrompt: [TypeOfPrompt!]!
  getContentSettings: ContentSettings
  getDarkModePreferences: DarkMode
  getDeletedUser(email: String!): DeletedUser
  getIntegrationRequest(integration: IntegrationsEnum!): RequestedIntegration
  getOneContent(contentId: String!): Content!
  getPlatformVote(platform: PlatformVoteEnum!): PlatformVote!
  getTypeOfPromptFromId(typeOfPromptId: String!): TypeOfPrompt
  getUserInfo: User!
  getUserSubscription: UserSubscription!
  getUserSubscriptionEDGE(clerkUserId: String!, secret: String!): UserSubscription!
  pushNewUserToNotion(email: String!, firstName: String!, lastName: String!): ResponseMessage!
  pushSupportTicket(area: String!, description: String!, severityLevel: String!, subject: String!): ResponseMessage!
  searchUserByClerkId(clerkUserId: String!): User
  searchUserByEmail(email: String!): User
  sendInvitationEmailFromUser(email: String!, firstName: String!, lastName: String!): ResponseMessage!
  sendNewUserEmail(email: String!, name: String!): ResponseMessage!
}

type RequestedIntegration {
  integration: IntegrationsEnum!
  requested: Boolean!
}

type ResponseMessage {
  """Response message"""
  response: String
}

type Subscription {
  androidTabletVoteSubscription: PlatformVoteSubscription
  androidVoteSubscription: PlatformVoteSubscription

  """Subscription for content"""
  contentSubscription(clerkUserId: String!): ContentSubscriptionType

  """Subscription for darkMode"""
  darkModeSubscription(clerkUserId: String!): DarkMode
  iOSVoteSubscription: PlatformVoteSubscription
  iPadOSVoteSubscription: PlatformVoteSubscription
  linuxVoteSubscription: PlatformVoteSubscription
  macOSVoteSubscription: PlatformVoteSubscription
  windowsVoteSubscription: PlatformVoteSubscription
}

enum SubscriptionTypeEnum {
  EARLYADOPTER
  LIFETIME
  MONTHLY
  TRIAL
  YEARLY
}

type TypeOfPrompt {
  createdAt: DateTime!
  displayName: String!
  id: String!
  systemPrompt: String!
}

type User {
  clerkUserId: String!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
}

type UserSubscription {
  clerkUserId: String!
  createdAt: DateTime!
  endDate: DateTime!
  extended: Boolean!
  id: String!
  startDate: DateTime!
  type: SubscriptionTypeEnum!
  user: User!
  userId: String!
}

enum typeOfMutationType {
  ADD
  DELETE
  EDIT
}