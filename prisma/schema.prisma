generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url = env("DATABASE_URL")
}

model User {
    id                  String          @id @default(auto()) @map("_id") @db.ObjectId
    name                String          
    email               String          @unique
    password            String?
    accessToken         String?
    createdAt           DateTime
    signInProvider      SignInProvider
    subscription        Subscription?
    content             Content[]
    notionAccount       NotionAccount?
}

enum SignInProvider {
    GOOGLE
    MICROSOFT
    APPLE
    PASSWORD
}

model Subscription {
    id                  String              @id @default(auto()) @map("_id") @db.ObjectId
    type                SubscriptionType
    createdAt           DateTime
    startDate           DateTime
    endDate             DateTime
    user                User?               @relation(fields: [userId], references: [id])
    userId              String              @unique @db.ObjectId
    extended            Boolean
}

enum SubscriptionType {
    TRIAL
    MONTHLY
    LIFETIME
    YEARLY
    EARLYADOPTER
}

model TypeOfPrompt {
    id                  String              @id @default(auto()) @map("_id") @db.ObjectId
    displayName         String
    systemPrompt        String
    createdAt           DateTime
    content             Content[]
}

model Content {
    id                      String                  @id @default(auto()) @map("_id") @db.ObjectId
    createdAt               DateTime
    title                   String?
    voiceNoteUrl            String?
    transcript              String?
    gptGenerated            String?
    typeOfPrompt            TypeOfPrompt?           @relation(fields: [typeOfPromptId], references: [id])
    typeOfPromptId          String?                 @db.ObjectId
    user                    User                    @relation(fields: [userId], references: [id])
    userId                  String                  @db.ObjectId
    generatedNotionPage     GeneratedNotionPage?
}

model NotionAccount {
    id                      String                  @id @default(auto()) @map("_id") @db.ObjectId
    createdAt               DateTime
    accessToken             String                  @unique
    workspaceName           String
    workspaceIcon           String
    workspaceId             String
    ownerUserId             String
    databaseId              String
    user                    User                    @relation(fields: [userId], references: [id])
    userId                  String                  @db.ObjectId @unique
    generatedNotionPage     GeneratedNotionPage[]
}

model GeneratedNotionPage {
    id                      String              @id @default(auto()) @map("_id") @db.ObjectId
    notionPageId            String              @unique
    url                     String
    content                 Content             @relation(fields: [contentId], references: [id])
    contentId               String              @unique @db.ObjectId
    notionAccount           NotionAccount       @relation(fields: [notionAccountId], references: [id])
    notionAccountId         String              @db.ObjectId
}